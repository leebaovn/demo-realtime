[{"D:\\BAO\\demo-realtime\\src\\index.js":"1","D:\\BAO\\demo-realtime\\src\\firebase\\index.js":"2","D:\\BAO\\demo-realtime\\src\\components\\ColumnChart\\index.js":"3","D:\\BAO\\demo-realtime\\src\\components\\Auth\\signin.js":"4","D:\\BAO\\demo-realtime\\src\\components\\Layout\\header.js":"5","D:\\BAO\\demo-realtime\\src\\components\\Auth\\login.js":"6","D:\\BAO\\demo-realtime\\src\\apis\\index.js":"7","D:\\BAO\\demo-realtime\\src\\components\\Room\\index.js":"8","D:\\BAO\\demo-realtime\\src\\components\\Modal\\create_room.js":"9","D:\\BAO\\demo-realtime\\src\\pages\\Room\\room-detail.js":"10","D:\\BAO\\demo-realtime\\src\\components\\Modal\\create_question.js":"11","D:\\BAO\\demo-realtime\\src\\pages\\Guest\\index.js":"12","D:\\BAO\\demo-realtime\\src\\App.js":"13","D:\\BAO\\demo-realtime\\src\\components\\Auth\\guest_login.js":"14","D:\\BAO\\demo-realtime\\src\\utils\\index.js":"15","D:\\BAO\\demo-realtime\\src\\components\\EditableCell\\index.js":"16","D:\\BAO\\demo-realtime\\src\\components\\Layout\\index.js":"17","D:\\BAO\\demo-realtime\\src\\contexts\\guest\\guest-context.js":"18","D:\\BAO\\demo-realtime\\src\\contexts\\room\\room-context.js":"19"},{"size":442,"mtime":1606707811792,"results":"20","hashOfConfig":"21"},{"size":655,"mtime":1606796422827,"results":"22","hashOfConfig":"21"},{"size":1111,"mtime":1606983895010,"results":"23","hashOfConfig":"21"},{"size":2558,"mtime":1606872738302,"results":"24","hashOfConfig":"21"},{"size":1308,"mtime":1606979311273,"results":"25","hashOfConfig":"21"},{"size":2283,"mtime":1606893482096,"results":"26","hashOfConfig":"21"},{"size":911,"mtime":1606967869253,"results":"27","hashOfConfig":"21"},{"size":5901,"mtime":1606978740072,"results":"28","hashOfConfig":"21"},{"size":1318,"mtime":1606980600838,"results":"29","hashOfConfig":"21"},{"size":7634,"mtime":1606980016305,"results":"30","hashOfConfig":"21"},{"size":2497,"mtime":1606980758680,"results":"31","hashOfConfig":"21"},{"size":4152,"mtime":1606983798314,"results":"32","hashOfConfig":"21"},{"size":1412,"mtime":1606977434067,"results":"33","hashOfConfig":"21"},{"size":1833,"mtime":1606977243806,"results":"34","hashOfConfig":"21"},{"size":462,"mtime":1606900829815,"results":"35","hashOfConfig":"21"},{"size":717,"mtime":1606722907392,"results":"36","hashOfConfig":"21"},{"size":274,"mtime":1606711665930,"results":"37","hashOfConfig":"21"},{"size":1305,"mtime":1606976380158,"results":"38","hashOfConfig":"21"},{"size":646,"mtime":1606977602392,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"nho8wy",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\BAO\\demo-realtime\\src\\index.js",[],["87","88"],"D:\\BAO\\demo-realtime\\src\\firebase\\index.js",[],"D:\\BAO\\demo-realtime\\src\\components\\ColumnChart\\index.js",["89"],"D:\\BAO\\demo-realtime\\src\\components\\Auth\\signin.js",["90","91"],"import React, { useRef } from 'react';\r\nimport './auth.style.css';\r\nimport { Link } from 'react-router-dom';\r\nimport firebase, { auth } from './../../firebase';\r\n\r\nfunction Signin() {\r\n  const emailRef = useRef('');\r\n  const pwdRef = useRef('');\r\n  const confirmpwdRef = useRef('');\r\n  const usernameRef = useRef('');\r\n  const handleSignup = async (e) => {\r\n    const { value: pwd } = pwdRef.current;\r\n    const { value: email } = emailRef.current;\r\n    const { value: confirmpwd } = confirmpwdRef.current;\r\n    const { value: username } = usernameRef.current;\r\n    e.preventDefault();\r\n    if (pwd !== confirmpwd) {\r\n      return;\r\n    }\r\n    let userRegister = null;\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, pwd)\r\n      .then(async (userCredential) => {\r\n        userCredential.user\r\n          .updateProfile({\r\n            displayName: username,\r\n          })\r\n          .then((data) => {\r\n            console.log(userCredential.user.displayName);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err, 'err');\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <div className='container'>\r\n      <div className='box'>\r\n        <h2 className='title'>SIGN UP</h2>\r\n        <form onSubmit={handleSignup}>\r\n          <div className='form-field'>\r\n            <div className='label'>Username</div>\r\n            <div className='input'>\r\n              <input type='text' ref={usernameRef} />\r\n            </div>\r\n          </div>\r\n          <div className='form-field'>\r\n            <div className='label'>Email</div>\r\n            <div className='input'>\r\n              <input type='email' ref={emailRef} />\r\n            </div>\r\n          </div>\r\n          <div className='form-field'>\r\n            <div className='label'>Password</div>\r\n            <div className='input'>\r\n              <input type='password' ref={pwdRef} />\r\n            </div>\r\n          </div>\r\n          <div className='form-field'>\r\n            <div className='label'>Confirm password</div>\r\n            <div className='input'>\r\n              <input type='password' ref={confirmpwdRef} />\r\n            </div>\r\n          </div>\r\n          <div className='btn-section'>\r\n            <input type='submit' value='Sign up' className='btn btn-default' />\r\n          </div>\r\n        </form>\r\n        <div className='text-direct'>\r\n          Already have an account ? <Link to='/login'>Sign in now</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n",["92","93"],"D:\\BAO\\demo-realtime\\src\\components\\Layout\\header.js",["94","95","96","97"],"D:\\BAO\\demo-realtime\\src\\components\\Auth\\login.js",["98","99","100"],"import React, { useEffect, useRef } from 'react'\r\nimport './auth.style.css'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport firebase, { auth } from './../../firebase'\r\nimport { GoogleOutlined, GooglePlusOutlined } from '@ant-design/icons'\r\nfunction Login() {\r\n  const history = useHistory()\r\n  const emailRef = useRef('')\r\n  const pwdRef = useRef('')\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault()\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(emailRef.current.value, pwdRef.current.value)\r\n      .then((user) => {\r\n        history.push('/')\r\n      })\r\n      .catch((err) => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  const handleGoogeLogin = async () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider()\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then(async (result) => {\r\n        // var token = result.credential.accessToken\r\n        // localStorage.setItem('@token', token)\r\n\r\n        history.push('/')\r\n      })\r\n      .catch((error) => {\r\n        console.log(`Error on signing in`, error)\r\n      })\r\n  }\r\n  return (\r\n    <div className='container'>\r\n      <div className='box'>\r\n        <h2 className='title'>ログイン</h2>\r\n        <form onSubmit={handleLogin}>\r\n          <div className='form-field'>\r\n            <div className='label'>Email</div>\r\n            <div className='input'>\r\n              <input type='email' ref={emailRef} />\r\n            </div>\r\n          </div>\r\n          <div className='form-field'>\r\n            <div className='label'>Password</div>\r\n            <div className='input'>\r\n              <input type='password' ref={pwdRef} />\r\n            </div>\r\n          </div>\r\n          <div className='btn-section'>\r\n            <input type='submit' value='Login' className='btn btn-default' />\r\n          </div>\r\n        </form>\r\n        <hr width='50%' />\r\n        <div className='social-login'>\r\n          <button onClick={handleGoogeLogin} className='login-button'>\r\n            <GooglePlusOutlined />\r\n            Sign in with Google\r\n          </button>\r\n        </div>\r\n        <div className='text-direct'>\r\n          Don't have an account ? <Link to='/signup'>Sign up now</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n",["101","102"],"D:\\BAO\\demo-realtime\\src\\apis\\index.js",[],"D:\\BAO\\demo-realtime\\src\\components\\Room\\index.js",["103"],"D:\\BAO\\demo-realtime\\src\\components\\Modal\\create_room.js",[],"D:\\BAO\\demo-realtime\\src\\pages\\Room\\room-detail.js",["104","105","106","107"],"import React, { useEffect, useState, useContext } from 'react'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { Table, Form, Button, Modal } from 'antd'\r\nimport EditableCell from './../../components/EditableCell'\r\nimport firebase, { auth } from './../../firebase'\r\nimport axios from './../../apis'\r\nimport ModalCreate from './../../components/Modal/create_question'\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  SaveOutlined,\r\n  CloseOutlined,\r\n  PlusOutlined,\r\n  ArrowLeftOutlined,\r\n  QrcodeOutlined,\r\n} from '@ant-design/icons'\r\nimport QRCode from 'qrcode.react'\r\nimport roomContext from './../../contexts/room/room-context'\r\nimport tinyUrl from 'tinyurl'\r\nfunction RoomDetail() {\r\n  const { id } = useParams()\r\n  const [form] = Form.useForm()\r\n  const [{ room }, roomDispatch] = useContext(roomContext)\r\n\r\n  const roomTitle = room?.title\r\n  //define state section\r\n  const [questions, setQuestions] = useState([])\r\n  const [editingKey, setEditingKey] = useState('')\r\n  const [visible, setVisible] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const isEditing = (record) => record.id === editingKey\r\n  const fetchQuestions = async () => {\r\n    setLoading(true)\r\n    const question = await axios.get(`/question/${id}`)\r\n    setQuestions(question.data)\r\n    setLoading(false)\r\n  }\r\n  const createQuestion = async (questionData) => {\r\n    setLoading(true)\r\n    if (questionData) {\r\n      const newQuestion = await axios.post(\r\n        `/question/create/${id}`,\r\n        questionData\r\n      )\r\n      setQuestions((pre) => [...pre, newQuestion.data])\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  const deleteQuestion = async (id) => {\r\n    await axios.delete(`/question/${id}`)\r\n    const newData = [...questions]\r\n    const index = newData.findIndex((item) => id === item.id)\r\n    if (index > -1) {\r\n      newData.splice(index, 1)\r\n      setQuestions(newData)\r\n    } else {\r\n      setQuestions(newData)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        fetchQuestions()\r\n      }\r\n    })\r\n  }, [])\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      question: '',\r\n      correctAns: '',\r\n      answerA: '',\r\n      responseTime: '',\r\n      answerB: '',\r\n      answerC: '',\r\n      answerD: '',\r\n      ...record,\r\n    })\r\n    setEditingKey(record.id)\r\n  }\r\n  const cancel = () => {\r\n    setEditingKey('')\r\n  }\r\n\r\n  const show = async (id) => {\r\n    await axios.post(`/question/${id}`)\r\n  }\r\n\r\n  const save = async (id) => {\r\n    try {\r\n      const row = await form.validateFields()\r\n      await axios.patch(`/question/${id}`, row)\r\n      const newData = [...questions]\r\n      const index = newData.findIndex((item) => id === item.id)\r\n      if (index > -1) {\r\n        const item = newData[index]\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        })\r\n        setQuestions(newData)\r\n        setEditingKey('')\r\n      } else {\r\n        newData.push(row)\r\n        setQuestions(newData)\r\n        setEditingKey('')\r\n      }\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo)\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: '質問',\r\n      dataIndex: 'question',\r\n      editable: true,\r\n      width: '14vw',\r\n    },\r\n\r\n    {\r\n      title: '期限',\r\n      dataIndex: 'responseTime',\r\n      editable: true,\r\n      width: '10vw',\r\n\r\n      render: (time) => {\r\n        return `${time}s`\r\n      },\r\n    },\r\n    {\r\n      title: 'A',\r\n      dataIndex: 'answerA',\r\n      editable: true,\r\n      width: '14vw',\r\n    },\r\n    {\r\n      title: 'B',\r\n      dataIndex: 'answerB',\r\n      width: '14vw',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'C',\r\n      dataIndex: 'answerC',\r\n      width: '14vw',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'D',\r\n      dataIndex: 'answerD',\r\n      width: '14vw',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'Actions',\r\n      width: '20vw',\r\n\r\n      render: (_, record) => {\r\n        const editable = isEditing(record)\r\n        return editable ? (\r\n          <>\r\n            <Button\r\n              style={{ marginRight: '1rem' }}\r\n              onClick={cancel}\r\n              size='small'\r\n            >\r\n              <CloseOutlined />\r\n            </Button>\r\n            <Button type='primary' onClick={() => save(record.id)} size='small'>\r\n              <SaveOutlined />\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              style={{ marginRight: '1rem' }}\r\n              onClick={() => edit(record)}\r\n              size='small'\r\n            >\r\n              <EditOutlined />\r\n            </Button>\r\n            <Button\r\n              style={{ marginRight: '1rem' }}\r\n              onClick={() => deleteQuestion(record.id)}\r\n              danger\r\n              size='small'\r\n            >\r\n              <DeleteOutlined />\r\n            </Button>\r\n            <Button type='primary' size='small' onClick={() => show(record.id)}>\r\n              Show\r\n            </Button>\r\n          </>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col\r\n    }\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex === 'responseTime' ? 'number' : 'text',\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    }\r\n  })\r\n\r\n  const exportQRCode = async () => {\r\n    const newUrl = await tinyUrl.shorten(\r\n      `https://realtime-demo-chart.web.app//roomplay/${id}/login`\r\n    )\r\n    Modal.info({\r\n      title: <p>{roomTitle}</p>,\r\n      centered: true,\r\n\r\n      content: (\r\n        <>\r\n          <QRCode level='H' size={256} value={newUrl} />\r\n          <a href={newUrl} target='_blank'>\r\n            {newUrl}\r\n          </a>\r\n        </>\r\n      ),\r\n      onOk() {},\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      <div>\r\n        <div\r\n          style={{\r\n            margin: '1rem 0',\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: 'flex-end',\r\n          }}\r\n        >\r\n          <Button\r\n            style={{ marginRight: 'auto', textTransform: 'uppercase' }}\r\n            type='dashed'\r\n          >\r\n            {room.title}\r\n          </Button>\r\n          <Button onClick={exportQRCode} style={{ marginRight: '1rem' }}>\r\n            <QrcodeOutlined />\r\n            Export QRCode\r\n          </Button>\r\n          <Button onClick={() => setVisible(true)} type='primary'>\r\n            <PlusOutlined />\r\n            Create new question\r\n          </Button>\r\n        </div>\r\n        <Form form={form} component={false}>\r\n          <Table\r\n            components={{\r\n              body: {\r\n                cell: EditableCell,\r\n              },\r\n            }}\r\n            dataSource={questions}\r\n            columns={mergedColumns}\r\n            loading={loading}\r\n            pagination={false}\r\n            rowKey='id'\r\n          />\r\n        </Form>\r\n        <div style={{ width: '100%', textAlign: 'right' }}>\r\n          <Button\r\n            style={{ margin: '1rem 0', textTransform: 'uppercase' }}\r\n            type='dashed'\r\n            danger\r\n          >\r\n            <Link to='/'>\r\n              <ArrowLeftOutlined />\r\n              Back to home\r\n            </Link>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <ModalCreate\r\n        visible={visible}\r\n        setVisible={setVisible}\r\n        createQuestion={createQuestion}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RoomDetail\r\n","D:\\BAO\\demo-realtime\\src\\components\\Modal\\create_question.js",["108"],"import React, { useState, useRef } from 'react'\r\nimport { Modal } from 'antd'\r\nimport './../Auth/auth.style.css'\r\n\r\nfunction CreateQuestion({ visible, setVisible, createQuestion, loading }) {\r\n  const questionRef = useRef('')\r\n  const restimeRef = useRef(null)\r\n  const ansARef = useRef('')\r\n  const ansBRef = useRef('')\r\n  const ansCRef = useRef('')\r\n  const ansDRef = useRef('')\r\n\r\n  const clearRef = () => {\r\n    questionRef.current.value = ''\r\n    restimeRef.current.value = ''\r\n    ansARef.current.value = ''\r\n    ansBRef.current.value = ''\r\n    ansCRef.current.value = ''\r\n    ansDRef.current.value = ''\r\n  }\r\n  const handleOk = () => {\r\n    const questionData = {\r\n      question: questionRef.current.value,\r\n      responseTime: restimeRef.current.value,\r\n      answerA: ansARef.current.value,\r\n      answerB: ansBRef.current.value,\r\n      answerC: ansCRef.current.value,\r\n      answerD: ansDRef.current.value,\r\n    }\r\n    createQuestion(questionData)\r\n    clearRef()\r\n    setVisible(false)\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title='Create question'\r\n      visible={visible}\r\n      onOk={handleOk}\r\n      confirmLoading={loading}\r\n      okText='Create'\r\n      onCancel={() => setVisible(false)}\r\n      width={450}\r\n    >\r\n      <div className='label'>Question</div>\r\n      <div className='input' style={{ width: '100%' }}>\r\n        <textarea ref={questionRef} style={{ width: '100%' }} />\r\n      </div>\r\n      <div className='label'>Response time</div>\r\n      <div className='input' style={{ width: '100%' }}>\r\n        <input\r\n          type='number'\r\n          onKeyDown={(e) => {\r\n            if (e.key === 'e' || e.key === 'E') {\r\n              e.preventDefault()\r\n            }\r\n          }}\r\n          ref={restimeRef}\r\n          style={{ width: '100%' }}\r\n        />\r\n      </div>\r\n      <div className='label'>Answer A</div>\r\n      <div className='input'>\r\n        <input type='text' ref={ansARef} style={{ width: '100%' }} />\r\n      </div>\r\n      <div className='label'>Answer B</div>\r\n      <div className='input'>\r\n        <input type='text' ref={ansBRef} style={{ width: '100%' }} />\r\n      </div>\r\n      <div className='label'>Answer C</div>\r\n      <div className='input'>\r\n        <input type='text' ref={ansCRef} style={{ width: '100%' }} />\r\n      </div>\r\n      <div className='label'>Answer D</div>\r\n      <div className='input'>\r\n        <input type='text' ref={ansDRef} style={{ width: '100%' }} />\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CreateQuestion\r\n",["109","110"],"D:\\BAO\\demo-realtime\\src\\pages\\Guest\\index.js",["111","112","113","114","115","116"],"D:\\BAO\\demo-realtime\\src\\App.js",[],"D:\\BAO\\demo-realtime\\src\\components\\Auth\\guest_login.js",["117"],"D:\\BAO\\demo-realtime\\src\\utils\\index.js",[],"D:\\BAO\\demo-realtime\\src\\components\\EditableCell\\index.js",[],["118","119"],"D:\\BAO\\demo-realtime\\src\\components\\Layout\\index.js",[],"D:\\BAO\\demo-realtime\\src\\contexts\\guest\\guest-context.js",[],"D:\\BAO\\demo-realtime\\src\\contexts\\room\\room-context.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":21,"column":15,"nodeType":"126","messageId":"127","endLine":21,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":4,"column":20,"nodeType":"130","messageId":"131","endLine":4,"endColumn":24},{"ruleId":"128","severity":1,"message":"132","line":20,"column":9,"nodeType":"130","messageId":"131","endLine":20,"endColumn":21},{"ruleId":"120","replacedBy":"133"},{"ruleId":"122","replacedBy":"134"},{"ruleId":"128","severity":1,"message":"129","line":3,"column":20,"nodeType":"130","messageId":"131","endLine":3,"endColumn":24},{"ruleId":"128","severity":1,"message":"135","line":5,"column":10,"nodeType":"130","messageId":"131","endLine":5,"endColumn":14},{"ruleId":"136","severity":1,"message":"137","line":20,"column":6,"nodeType":"138","endLine":20,"endColumn":8,"suggestions":"139"},{"ruleId":"140","severity":1,"message":"141","line":29,"column":11,"nodeType":"142","endLine":29,"endColumn":52},{"ruleId":"128","severity":1,"message":"143","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":26},{"ruleId":"128","severity":1,"message":"129","line":4,"column":20,"nodeType":"130","messageId":"131","endLine":4,"endColumn":24},{"ruleId":"128","severity":1,"message":"144","line":5,"column":10,"nodeType":"130","messageId":"131","endLine":5,"endColumn":24},{"ruleId":"120","replacedBy":"145"},{"ruleId":"122","replacedBy":"146"},{"ruleId":"128","severity":1,"message":"147","line":20,"column":10,"nodeType":"130","messageId":"131","endLine":20,"endColumn":19},{"ruleId":"128","severity":1,"message":"129","line":5,"column":20,"nodeType":"130","messageId":"131","endLine":5,"endColumn":24},{"ruleId":"128","severity":1,"message":"148","line":23,"column":20,"nodeType":"130","messageId":"131","endLine":23,"endColumn":32},{"ruleId":"136","severity":1,"message":"149","line":69,"column":6,"nodeType":"138","endLine":69,"endColumn":8,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":229,"column":28,"nodeType":"153","endLine":229,"endColumn":43},{"ruleId":"128","severity":1,"message":"154","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"120","replacedBy":"155"},{"ruleId":"122","replacedBy":"156"},{"ruleId":"128","severity":1,"message":"135","line":3,"column":10,"nodeType":"130","messageId":"131","endLine":3,"endColumn":14},{"ruleId":"128","severity":1,"message":"157","line":4,"column":8,"nodeType":"130","messageId":"131","endLine":4,"endColumn":16},{"ruleId":"128","severity":1,"message":"158","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":16},{"ruleId":"128","severity":1,"message":"159","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":17},{"ruleId":"136","severity":1,"message":"160","line":32,"column":6,"nodeType":"138","endLine":32,"endColumn":8,"suggestions":"161"},{"ruleId":"136","severity":1,"message":"162","line":93,"column":6,"nodeType":"138","endLine":93,"endColumn":23,"suggestions":"163"},{"ruleId":"128","severity":1,"message":"164","line":9,"column":10,"nodeType":"130","messageId":"131","endLine":9,"endColumn":20},{"ruleId":"120","replacedBy":"165"},{"ruleId":"122","replacedBy":"166"},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"no-dupe-keys","Duplicate key 'data'.","ObjectExpression","unexpected","no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","'userRegister' is assigned a value but never used.",["167"],["168"],"'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["169"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'GoogleOutlined' is defined but never used.",["167"],["168"],"'roomState' is assigned a value but never used.","'roomDispatch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchQuestions'. Either include it or remove the dependency array.",["170"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","'useState' is defined but never used.",["167"],["168"],"'firebase' is defined but never used.","'confetti' is defined but never used.","'fireworks' is defined but never used.","React Hook useEffect has a missing dependency: 'listenForShowQuestion'. Either include it or remove the dependency array.",["171"],"React Hook useEffect has a missing dependency: 'listenForVoting'. Either include it or remove the dependency array.",["172"],"'guestState' is assigned a value but never used.",["167"],["168"],"no-global-assign","no-unsafe-negation",{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [history]",{"range":"181","text":"182"},"Update the dependencies array to be: [fetchQuestions]",{"range":"183","text":"184"},"Update the dependencies array to be: [listenForShowQuestion]",{"range":"185","text":"186"},"Update the dependencies array to be: [currentQuestion, listenForVoting]",{"range":"187","text":"188"},[660,662],"[history]",[2093,2095],"[fetchQuestions]",[1205,1207],"[listenForShowQuestion]",[3084,3101],"[currentQuestion, listenForVoting]"]