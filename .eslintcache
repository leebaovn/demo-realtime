[{"D:\\BAO\\demo-realtime\\src\\index.js":"1","D:\\BAO\\demo-realtime\\src\\firebase\\index.js":"2","D:\\BAO\\demo-realtime\\src\\components\\ColumnChart\\index.js":"3","D:\\BAO\\demo-realtime\\src\\components\\Auth\\signin.js":"4","D:\\BAO\\demo-realtime\\src\\components\\Layout\\header.js":"5","D:\\BAO\\demo-realtime\\src\\components\\Auth\\login.js":"6","D:\\BAO\\demo-realtime\\src\\apis\\index.js":"7","D:\\BAO\\demo-realtime\\src\\components\\Room\\index.js":"8","D:\\BAO\\demo-realtime\\src\\components\\Modal\\create_room.js":"9","D:\\BAO\\demo-realtime\\src\\pages\\Room\\room-detail.js":"10","D:\\BAO\\demo-realtime\\src\\components\\Modal\\create_question.js":"11","D:\\BAO\\demo-realtime\\src\\pages\\Guest\\index.js":"12","D:\\BAO\\demo-realtime\\src\\App.js":"13","D:\\BAO\\demo-realtime\\src\\components\\Auth\\guest_login.js":"14","D:\\BAO\\demo-realtime\\src\\utils\\index.js":"15"},{"size":442,"mtime":1606707811792,"results":"16","hashOfConfig":"17"},{"size":655,"mtime":1606796422827,"results":"18","hashOfConfig":"17"},{"size":1118,"mtime":1606901348770,"results":"19","hashOfConfig":"17"},{"size":2558,"mtime":1606872738302,"results":"20","hashOfConfig":"17"},{"size":992,"mtime":1606875707037,"results":"21","hashOfConfig":"17"},{"size":2283,"mtime":1606893482096,"results":"22","hashOfConfig":"17"},{"size":838,"mtime":1606903694554,"results":"23","hashOfConfig":"17"},{"size":5480,"mtime":1606896708848,"results":"24","hashOfConfig":"17"},{"size":890,"mtime":1606882691413,"results":"25","hashOfConfig":"17"},{"size":5922,"mtime":1606901670719,"results":"26","hashOfConfig":"17"},{"size":2058,"mtime":1606885045754,"results":"27","hashOfConfig":"17"},{"size":3439,"mtime":1606905416118,"results":"28","hashOfConfig":"17"},{"size":1095,"mtime":1606898637445,"results":"29","hashOfConfig":"17"},{"size":1605,"mtime":1606904165155,"results":"30","hashOfConfig":"17"},{"size":462,"mtime":1606900829815,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nho8wy",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\BAO\\demo-realtime\\src\\index.js",[],"D:\\BAO\\demo-realtime\\src\\firebase\\index.js",[],"D:\\BAO\\demo-realtime\\src\\components\\ColumnChart\\index.js",[],"D:\\BAO\\demo-realtime\\src\\components\\Auth\\signin.js",["64","65"],"D:\\BAO\\demo-realtime\\src\\components\\Layout\\header.js",["66","67","68","69"],"D:\\BAO\\demo-realtime\\src\\components\\Auth\\login.js",["70","71","72"],"D:\\BAO\\demo-realtime\\src\\apis\\index.js",["73"],"D:\\BAO\\demo-realtime\\src\\components\\Room\\index.js",[],"D:\\BAO\\demo-realtime\\src\\components\\Modal\\create_room.js",["74"],"D:\\BAO\\demo-realtime\\src\\pages\\Room\\room-detail.js",["75","76"],"import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { Table, Form, Button } from 'antd'\r\nimport EditableCell from './../../components/EditableCell'\r\nimport firebase, { auth } from './../../firebase'\r\nimport axios from './../../apis'\r\nimport ModalCreate from './../../components/Modal/create_question'\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  SaveOutlined,\r\n  CloseOutlined,\r\n} from '@ant-design/icons'\r\nfunction RoomDetail() {\r\n  const { id } = useParams()\r\n  const [form] = Form.useForm()\r\n\r\n  //define state section\r\n  const [questions, setQuestions] = useState([])\r\n  const [editingKey, setEditingKey] = useState('')\r\n  const [visible, setVisible] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  const isEditing = (record) => record.id === editingKey\r\n\r\n  const fetchQuestions = async () => {\r\n    setLoading(true)\r\n    const question = await axios.get(`/question/${id}`)\r\n    setQuestions(question.data)\r\n    setLoading(false)\r\n  }\r\n  const createQuestion = async (questionData) => {\r\n    setLoading(true)\r\n    if (questionData) {\r\n      const newQuestion = await axios.post(\r\n        `/question/create/${id}`,\r\n        questionData\r\n      )\r\n      setQuestions((pre) => [...pre, newQuestion.data])\r\n    }\r\n\r\n    setLoading(false)\r\n  }\r\n\r\n  const deleteQuestion = async (id) => {\r\n    await axios.delete(`/question/${id}`)\r\n    const newData = [...questions]\r\n    const index = newData.findIndex((item) => id === item.id)\r\n    if (index > -1) {\r\n      newData.splice(index, 1)\r\n      setQuestions(newData)\r\n    } else {\r\n      setQuestions(newData)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      if (user) {\r\n        fetchQuestions()\r\n      }\r\n    })\r\n  }, [])\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      question: '',\r\n      correctAns: '',\r\n      answerA: '',\r\n      responseTime: '',\r\n      answerB: '',\r\n      answerC: '',\r\n      answerD: '',\r\n      ...record,\r\n    })\r\n    setEditingKey(record.id)\r\n  }\r\n  const cancel = () => {\r\n    setEditingKey('')\r\n  }\r\n\r\n  const show = async (id) => {\r\n    await axios.post(`/question/${id}`)\r\n  }\r\n\r\n  const save = async (id) => {\r\n    try {\r\n      const row = await form.validateFields()\r\n      await axios.patch(`/question/${id}`, row)\r\n      const newData = [...questions]\r\n      const index = newData.findIndex((item) => id === item.id)\r\n      if (index > -1) {\r\n        const item = newData[index]\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        })\r\n        setQuestions(newData)\r\n        setEditingKey('')\r\n      } else {\r\n        newData.push(row)\r\n        setQuestions(newData)\r\n        setEditingKey('')\r\n      }\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo)\r\n    }\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Question',\r\n      dataIndex: 'question',\r\n      editable: true,\r\n      width: '14vw',\r\n    },\r\n\r\n    {\r\n      title: '期限',\r\n      dataIndex: 'responseTime',\r\n      editable: true,\r\n      width: '10vw',\r\n\r\n      render: (time) => {\r\n        return `${time}s`\r\n      },\r\n    },\r\n    {\r\n      title: 'A',\r\n      dataIndex: 'answerA',\r\n      editable: true,\r\n      width: '14vw',\r\n    },\r\n    {\r\n      title: 'B',\r\n      dataIndex: 'answerB',\r\n      width: '14vw',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'C',\r\n      dataIndex: 'answerC',\r\n      width: '14vw',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'D',\r\n      dataIndex: 'answerD',\r\n      width: '14vw',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'Actions',\r\n      width: '20vw',\r\n\r\n      render: (_, record) => {\r\n        const editable = isEditing(record)\r\n        return editable ? (\r\n          <>\r\n            <Button\r\n              style={{ marginRight: '1rem' }}\r\n              onClick={cancel}\r\n              size='small'\r\n            >\r\n              <CloseOutlined />\r\n            </Button>\r\n            <Button type='primary' onClick={() => save(record.id)} size='small'>\r\n              <SaveOutlined />\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              style={{ marginRight: '1rem' }}\r\n              onClick={() => edit(record)}\r\n              size='small'\r\n            >\r\n              <EditOutlined />\r\n            </Button>\r\n            <Button\r\n              style={{ marginRight: '1rem' }}\r\n              onClick={() => deleteQuestion(record.id)}\r\n              danger\r\n              size='small'\r\n            >\r\n              <DeleteOutlined />\r\n            </Button>\r\n            <Button type='primary' size='small' onClick={() => show(record.id)}>\r\n              Show\r\n            </Button>\r\n          </>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col\r\n    }\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex === 'responseTime' ? 'number' : 'text',\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className='wrapper'>\r\n      <div>\r\n        <Button onClick={() => setVisible(true)} style={{ margin: '1rem 0' }}>\r\n          +Create new question\r\n        </Button>\r\n        <Form form={form} component={false}>\r\n          <Table\r\n            components={{\r\n              body: {\r\n                cell: EditableCell,\r\n              },\r\n            }}\r\n            dataSource={questions}\r\n            columns={mergedColumns}\r\n            loading={loading}\r\n            pagination={false}\r\n            rowKey='id'\r\n          />\r\n        </Form>\r\n      </div>\r\n      <ModalCreate\r\n        visible={visible}\r\n        setVisible={setVisible}\r\n        createQuestion={createQuestion}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RoomDetail\r\n",["77","78"],"D:\\BAO\\demo-realtime\\src\\components\\Modal\\create_question.js",["79"],"D:\\BAO\\demo-realtime\\src\\pages\\Guest\\index.js",["80","81","82","83","84","85"],"D:\\BAO\\demo-realtime\\src\\App.js",[],"D:\\BAO\\demo-realtime\\src\\components\\Auth\\guest_login.js",[],"D:\\BAO\\demo-realtime\\src\\utils\\index.js",[],{"ruleId":"86","severity":1,"message":"87","line":4,"column":20,"nodeType":"88","messageId":"89","endLine":4,"endColumn":24},{"ruleId":"86","severity":1,"message":"90","line":20,"column":9,"nodeType":"88","messageId":"89","endLine":20,"endColumn":21},{"ruleId":"86","severity":1,"message":"87","line":3,"column":20,"nodeType":"88","messageId":"89","endLine":3,"endColumn":24},{"ruleId":"86","severity":1,"message":"91","line":4,"column":10,"nodeType":"88","messageId":"89","endLine":4,"endColumn":14},{"ruleId":"92","severity":1,"message":"93","line":18,"column":6,"nodeType":"94","endLine":18,"endColumn":8,"suggestions":"95"},{"ruleId":"96","severity":1,"message":"97","line":27,"column":11,"nodeType":"98","endLine":27,"endColumn":52},{"ruleId":"86","severity":1,"message":"99","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"87","line":4,"column":20,"nodeType":"88","messageId":"89","endLine":4,"endColumn":24},{"ruleId":"86","severity":1,"message":"100","line":5,"column":10,"nodeType":"88","messageId":"89","endLine":5,"endColumn":24},{"ruleId":"86","severity":1,"message":"87","line":3,"column":20,"nodeType":"88","messageId":"89","endLine":3,"endColumn":24},{"ruleId":"86","severity":1,"message":"101","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":5,"column":20,"nodeType":"88","messageId":"89","endLine":5,"endColumn":24},{"ruleId":"92","severity":1,"message":"102","line":63,"column":6,"nodeType":"94","endLine":63,"endColumn":8,"suggestions":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"86","severity":1,"message":"101","line":1,"column":17,"nodeType":"88","messageId":"89","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"108","line":4,"column":8,"nodeType":"88","messageId":"89","endLine":4,"endColumn":16},{"ruleId":"86","severity":1,"message":"109","line":5,"column":8,"nodeType":"88","messageId":"89","endLine":5,"endColumn":16},{"ruleId":"86","severity":1,"message":"110","line":6,"column":8,"nodeType":"88","messageId":"89","endLine":6,"endColumn":17},{"ruleId":"86","severity":1,"message":"111","line":11,"column":11,"nodeType":"88","messageId":"89","endLine":11,"endColumn":17},{"ruleId":"92","severity":1,"message":"112","line":80,"column":6,"nodeType":"94","endLine":80,"endColumn":8,"suggestions":"113"},{"ruleId":"92","severity":1,"message":"114","line":83,"column":6,"nodeType":"94","endLine":83,"endColumn":8,"suggestions":"115"},"no-unused-vars","'auth' is defined but never used.","Identifier","unusedVar","'userRegister' is assigned a value but never used.","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["116"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'GoogleOutlined' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchQuestions'. Either include it or remove the dependency array.",["117"],"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"'firebase' is defined but never used.","'confetti' is defined but never used.","'fireworks' is defined but never used.","'roomId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'listenForVoting'. Either include it or remove the dependency array.",["120"],"React Hook useEffect has a missing dependency: 'listenForShowQuestion'. Either include it or remove the dependency array.",["121"],{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},"Update the dependencies array to be: [history]",{"range":"130","text":"131"},"Update the dependencies array to be: [fetchQuestions]",{"range":"132","text":"133"},"Update the dependencies array to be: [listenForVoting]",{"range":"134","text":"135"},"Update the dependencies array to be: [listenForShowQuestion]",{"range":"136","text":"137"},[577,579],"[history]",[1793,1795],"[fetchQuestions]",[2507,2509],"[listenForVoting]",[2567,2569],"[listenForShowQuestion]"]